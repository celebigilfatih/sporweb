"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2265],{172:(e,r,t)=>{t.d(r,{C:()=>s,H:()=>o});let o="http://localhost:5001/api",s="http://localhost:5001"},2649:(e,r,t)=>{t.d(r,{A:()=>n});var o=t(2651),s=t(172);let c=o.A.create({baseURL:s.H,timeout:1e4,headers:{"Content-Type":"application/json"}});c.interceptors.request.use(e=>{{let r=localStorage.getItem("token");r&&(e.headers.Authorization="Bearer ".concat(r))}return e},e=>(console.error("Request interceptor error:",e),Promise.reject(e))),c.interceptors.response.use(e=>(console.log("API Success:",e.config.url,e.status),e),e=>{var r,t,s;return o.A.isCancel(e)?(console.log("Request cancelled:",e.message),Promise.reject(Error("Request was cancelled"))):"ERR_NETWORK"===e.code?(console.error("Network error - backend server may be down"),Promise.reject(Error("Network error - please check if the server is running"))):"ECONNABORTED"===e.code?(console.error("Request timeout"),Promise.reject(Error("Request timeout - server is taking too long to respond"))):(console.error("API Error Details:",{url:null===(r=e.config)||void 0===r?void 0:r.url,method:null===(t=e.config)||void 0===t?void 0:t.method,status:null===(s=e.response)||void 0===s?void 0:s.status,message:e.message,code:e.code}),Promise.reject(e))});let n=c},2265:(e,r,t)=>{t.d(r,{newsService:()=>s});var o=t(2649);let s={getAll:async()=>{try{return(await o.A.get("/news")).data}catch(e){if(e&&"object"==typeof e&&"response"in e&&e.response)throw Error("Failed to fetch news: ".concat(e.response.status," ").concat(e.response.statusText));throw Error("Failed to fetch news")}},getById:async e=>{try{return(await o.A.get("/news/".concat(e))).data}catch(e){throw console.error("Error in newsService.getById:",e),e}},create:async e=>{try{return(await o.A.post("/news",e)).data}catch(e){throw console.error("Error in newsService.create:",e),e}},update:async(e,r)=>{try{return(await o.A.put("/news/".concat(e),r)).data}catch(e){throw console.error("Error in newsService.update:",e),e}},delete:async e=>{try{await o.A.delete("/news/".concat(e))}catch(e){throw console.error("Error in newsService.delete:",e),e}}}}}]);